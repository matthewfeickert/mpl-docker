.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_gallery_misc_anchored_artists.py>`     to download the full example code
    .. rst-class:: sphx-glr-example-title

    .. _sphx_glr_gallery_misc_anchored_artists.py:


================
Anchored Artists
================

This example illustrates the use of the anchored objects without the
helper classes found in :mod:`mpl_toolkits.axes_grid1`. This version
of the figure is similar to the one found in
:doc:`/gallery/axes_grid1/simple_anchored_artists`, but it is
implemented using only the matplotlib namespace, without the help
of additional toolkits.



.. image:: /gallery/misc/images/sphx_glr_anchored_artists_001.png
    :alt: anchored artists
    :class: sphx-glr-single-img






.. code-block:: default


    from matplotlib import pyplot as plt
    from matplotlib.lines import Line2D
    from matplotlib.patches import Ellipse
    from matplotlib.offsetbox import (
        AnchoredOffsetbox, AuxTransformBox, DrawingArea, TextArea, VPacker)


    class AnchoredText(AnchoredOffsetbox):
        def __init__(self, s, loc, pad=0.4, borderpad=0.5,
                     prop=None, frameon=True):
            self.txt = TextArea(s, minimumdescent=False)
            super().__init__(loc, pad=pad, borderpad=borderpad,
                             child=self.txt, prop=prop, frameon=frameon)


    def draw_text(ax):
        """
        Draw a text-box anchored to the upper-left corner of the figure.
        """
        at = AnchoredText("Figure 1a", loc='upper left', frameon=True)
        at.patch.set_boxstyle("round,pad=0.,rounding_size=0.2")
        ax.add_artist(at)


    class AnchoredDrawingArea(AnchoredOffsetbox):
        def __init__(self, width, height, xdescent, ydescent,
                     loc, pad=0.4, borderpad=0.5, prop=None, frameon=True):
            self.da = DrawingArea(width, height, xdescent, ydescent)
            super().__init__(loc, pad=pad, borderpad=borderpad,
                             child=self.da, prop=None, frameon=frameon)


    def draw_circle(ax):
        """
        Draw a circle in axis coordinates
        """
        from matplotlib.patches import Circle
        ada = AnchoredDrawingArea(20, 20, 0, 0,
                                  loc='upper right', pad=0., frameon=False)
        p = Circle((10, 10), 10)
        ada.da.add_artist(p)
        ax.add_artist(ada)


    class AnchoredEllipse(AnchoredOffsetbox):
        def __init__(self, transform, width, height, angle, loc,
                     pad=0.1, borderpad=0.1, prop=None, frameon=True):
            """
            Draw an ellipse the size in data coordinate of the give axes.

            pad, borderpad in fraction of the legend font size (or prop)
            """
            self._box = AuxTransformBox(transform)
            self.ellipse = Ellipse((0, 0), width, height, angle)
            self._box.add_artist(self.ellipse)
            super().__init__(loc, pad=pad, borderpad=borderpad,
                             child=self._box, prop=prop, frameon=frameon)


    def draw_ellipse(ax):
        """
        Draw an ellipse of width=0.1, height=0.15 in data coordinates
        """
        ae = AnchoredEllipse(ax.transData, width=0.1, height=0.15, angle=0.,
                             loc='lower left', pad=0.5, borderpad=0.4,
                             frameon=True)

        ax.add_artist(ae)


    class AnchoredSizeBar(AnchoredOffsetbox):
        def __init__(self, transform, size, label, loc,
                     pad=0.1, borderpad=0.1, sep=2, prop=None, frameon=True):
            """
            Draw a horizontal bar with the size in data coordinate of the given
            axes. A label will be drawn underneath (center-aligned).

            pad, borderpad in fraction of the legend font size (or prop)
            sep in points.
            """
            self.size_bar = AuxTransformBox(transform)
            self.size_bar.add_artist(Line2D([0, size], [0, 0], color="black"))

            self.txt_label = TextArea(label, minimumdescent=False)

            self._box = VPacker(children=[self.size_bar, self.txt_label],
                                align="center",
                                pad=0, sep=sep)

            super().__init__(loc, pad=pad, borderpad=borderpad,
                             child=self._box, prop=prop, frameon=frameon)


    def draw_sizebar(ax):
        """
        Draw a horizontal bar with length of 0.1 in data coordinates,
        with a fixed label underneath.
        """
        asb = AnchoredSizeBar(ax.transData,
                              0.1,
                              r"1$^{\prime}$",
                              loc='lower center',
                              pad=0.1, borderpad=0.5, sep=5,
                              frameon=False)
        ax.add_artist(asb)


    ax = plt.gca()
    ax.set_aspect(1.)

    draw_text(ax)
    draw_circle(ax)
    draw_ellipse(ax)
    draw_sizebar(ax)

    plt.show()


.. _sphx_glr_download_gallery_misc_anchored_artists.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: anchored_artists.py <anchored_artists.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: anchored_artists.ipynb <anchored_artists.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    Keywords: matplotlib code example, codex, python plot, pyplot
    `Gallery generated by Sphinx-Gallery
    <https://sphinx-gallery.readthedocs.io>`_
