.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_gallery_pyplots_boxplot_demo_pyplot.py>`     to download the full example code
    .. rst-class:: sphx-glr-example-title

    .. _sphx_glr_gallery_pyplots_boxplot_demo_pyplot.py:


============
Boxplot Demo
============

Example boxplot code


.. code-block:: default


    import numpy as np
    import matplotlib.pyplot as plt

    # Fixing random state for reproducibility
    np.random.seed(19680801)

    # fake up some data
    spread = np.random.rand(50) * 100
    center = np.ones(25) * 50
    flier_high = np.random.rand(10) * 100 + 100
    flier_low = np.random.rand(10) * -100
    data = np.concatenate((spread, center, flier_high, flier_low))









.. code-block:: default


    fig1, ax1 = plt.subplots()
    ax1.set_title('Basic Plot')
    ax1.boxplot(data)




.. image:: /gallery/pyplots/images/sphx_glr_boxplot_demo_pyplot_001.png
    :alt: Basic Plot
    :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    {'whiskers': [<matplotlib.lines.Line2D object at 0x7f79c9f23850>, <matplotlib.lines.Line2D object at 0x7f79c9ea9460>], 'caps': [<matplotlib.lines.Line2D object at 0x7f79c9ea9430>, <matplotlib.lines.Line2D object at 0x7f79c9ea9790>], 'boxes': [<matplotlib.lines.Line2D object at 0x7f79c9f235b0>], 'medians': [<matplotlib.lines.Line2D object at 0x7f79c9ea9040>], 'fliers': [<matplotlib.lines.Line2D object at 0x7f79c9ea92b0>], 'means': []}




.. code-block:: default


    fig2, ax2 = plt.subplots()
    ax2.set_title('Notched boxes')
    ax2.boxplot(data, notch=True)




.. image:: /gallery/pyplots/images/sphx_glr_boxplot_demo_pyplot_002.png
    :alt: Notched boxes
    :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    {'whiskers': [<matplotlib.lines.Line2D object at 0x7f79caf36f70>, <matplotlib.lines.Line2D object at 0x7f79caf367f0>], 'caps': [<matplotlib.lines.Line2D object at 0x7f79ca084a90>, <matplotlib.lines.Line2D object at 0x7f79ca084c10>], 'boxes': [<matplotlib.lines.Line2D object at 0x7f79caf36a00>], 'medians': [<matplotlib.lines.Line2D object at 0x7f79ca084fa0>], 'fliers': [<matplotlib.lines.Line2D object at 0x7f79ca084b50>], 'means': []}




.. code-block:: default


    green_diamond = dict(markerfacecolor='g', marker='D')
    fig3, ax3 = plt.subplots()
    ax3.set_title('Changed Outlier Symbols')
    ax3.boxplot(data, flierprops=green_diamond)




.. image:: /gallery/pyplots/images/sphx_glr_boxplot_demo_pyplot_003.png
    :alt: Changed Outlier Symbols
    :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    {'whiskers': [<matplotlib.lines.Line2D object at 0x7f79c9f39cd0>, <matplotlib.lines.Line2D object at 0x7f79caee33d0>], 'caps': [<matplotlib.lines.Line2D object at 0x7f79caee31f0>, <matplotlib.lines.Line2D object at 0x7f79caee3610>], 'boxes': [<matplotlib.lines.Line2D object at 0x7f79c9f396a0>], 'medians': [<matplotlib.lines.Line2D object at 0x7f79caee3af0>], 'fliers': [<matplotlib.lines.Line2D object at 0x7f79caee3850>], 'means': []}




.. code-block:: default


    fig4, ax4 = plt.subplots()
    ax4.set_title('Hide Outlier Points')
    ax4.boxplot(data, showfliers=False)




.. image:: /gallery/pyplots/images/sphx_glr_boxplot_demo_pyplot_004.png
    :alt: Hide Outlier Points
    :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    {'whiskers': [<matplotlib.lines.Line2D object at 0x7f79cae93520>, <matplotlib.lines.Line2D object at 0x7f79cae93dc0>], 'caps': [<matplotlib.lines.Line2D object at 0x7f79cae872e0>, <matplotlib.lines.Line2D object at 0x7f79cae87640>], 'boxes': [<matplotlib.lines.Line2D object at 0x7f79cae93220>], 'medians': [<matplotlib.lines.Line2D object at 0x7f79cae879a0>], 'fliers': [], 'means': []}




.. code-block:: default


    red_square = dict(markerfacecolor='r', marker='s')
    fig5, ax5 = plt.subplots()
    ax5.set_title('Horizontal Boxes')
    ax5.boxplot(data, vert=False, flierprops=red_square)




.. image:: /gallery/pyplots/images/sphx_glr_boxplot_demo_pyplot_005.png
    :alt: Horizontal Boxes
    :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    {'whiskers': [<matplotlib.lines.Line2D object at 0x7f79c9ef7c70>, <matplotlib.lines.Line2D object at 0x7f79c9ef7fa0>], 'caps': [<matplotlib.lines.Line2D object at 0x7f79c9f0d340>, <matplotlib.lines.Line2D object at 0x7f79c9f0d6a0>], 'boxes': [<matplotlib.lines.Line2D object at 0x7f79c9ef7910>], 'medians': [<matplotlib.lines.Line2D object at 0x7f79c9f0da00>], 'fliers': [<matplotlib.lines.Line2D object at 0x7f79c9f0dd60>], 'means': []}




.. code-block:: default


    fig6, ax6 = plt.subplots()
    ax6.set_title('Shorter Whisker Length')
    ax6.boxplot(data, flierprops=red_square, vert=False, whis=0.75)




.. image:: /gallery/pyplots/images/sphx_glr_boxplot_demo_pyplot_006.png
    :alt: Shorter Whisker Length
    :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    {'whiskers': [<matplotlib.lines.Line2D object at 0x7f79ca98bd60>, <matplotlib.lines.Line2D object at 0x7f79cae4d0d0>], 'caps': [<matplotlib.lines.Line2D object at 0x7f79cae4dd60>, <matplotlib.lines.Line2D object at 0x7f79cae4d400>], 'boxes': [<matplotlib.lines.Line2D object at 0x7f79ca98ba00>], 'medians': [<matplotlib.lines.Line2D object at 0x7f79cae4d7f0>], 'fliers': [<matplotlib.lines.Line2D object at 0x7f79cae4d040>], 'means': []}



Fake up some more data


.. code-block:: default


    spread = np.random.rand(50) * 100
    center = np.ones(25) * 40
    flier_high = np.random.rand(10) * 100 + 100
    flier_low = np.random.rand(10) * -100
    d2 = np.concatenate((spread, center, flier_high, flier_low))








Making a 2-D array only works if all the columns are the
same length.  If they are not, then use a list instead.
This is actually more efficient because boxplot converts
a 2-D array into a list of vectors internally anyway.


.. code-block:: default


    data = [data, d2, d2[::2]]
    fig7, ax7 = plt.subplots()
    ax7.set_title('Multiple Samples with Different sizes')
    ax7.boxplot(data)

    plt.show()




.. image:: /gallery/pyplots/images/sphx_glr_boxplot_demo_pyplot_007.png
    :alt: Multiple Samples with Different sizes
    :class: sphx-glr-single-img





------------

References
""""""""""

The use of the following functions, methods, classes and modules is shown
in this example:


.. code-block:: default


    import matplotlib
    matplotlib.axes.Axes.boxplot
    matplotlib.pyplot.boxplot




.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    <function boxplot at 0x7f79f26d18b0>




.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  2.021 seconds)


.. _sphx_glr_download_gallery_pyplots_boxplot_demo_pyplot.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: boxplot_demo_pyplot.py <boxplot_demo_pyplot.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: boxplot_demo_pyplot.ipynb <boxplot_demo_pyplot.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    Keywords: matplotlib code example, codex, python plot, pyplot
    `Gallery generated by Sphinx-Gallery
    <https://sphinx-gallery.readthedocs.io>`_
