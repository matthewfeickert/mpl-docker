.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_gallery_color_colormap_reference.py>`     to download the full example code
    .. rst-class:: sphx-glr-example-title

    .. _sphx_glr_gallery_color_colormap_reference.py:


==================
Colormap reference
==================

Reference for colormaps included with Matplotlib.

A reversed version of each of these colormaps is available by appending
``_r`` to the name, e.g., ``viridis_r``.

See :doc:`/tutorials/colors/colormaps` for an in-depth discussion about
colormaps, including colorblind-friendliness.


.. code-block:: default


    import numpy as np
    import matplotlib.pyplot as plt


    cmaps = [('Perceptually Uniform Sequential', [
                'viridis', 'plasma', 'inferno', 'magma', 'cividis']),
             ('Sequential', [
                'Greys', 'Purples', 'Blues', 'Greens', 'Oranges', 'Reds',
                'YlOrBr', 'YlOrRd', 'OrRd', 'PuRd', 'RdPu', 'BuPu',
                'GnBu', 'PuBu', 'YlGnBu', 'PuBuGn', 'BuGn', 'YlGn']),
             ('Sequential (2)', [
                'binary', 'gist_yarg', 'gist_gray', 'gray', 'bone', 'pink',
                'spring', 'summer', 'autumn', 'winter', 'cool', 'Wistia',
                'hot', 'afmhot', 'gist_heat', 'copper']),
             ('Diverging', [
                'PiYG', 'PRGn', 'BrBG', 'PuOr', 'RdGy', 'RdBu',
                'RdYlBu', 'RdYlGn', 'Spectral', 'coolwarm', 'bwr', 'seismic']),
             ('Cyclic', ['twilight', 'twilight_shifted', 'hsv']),
             ('Qualitative', [
                'Pastel1', 'Pastel2', 'Paired', 'Accent',
                'Dark2', 'Set1', 'Set2', 'Set3',
                'tab10', 'tab20', 'tab20b', 'tab20c']),
             ('Miscellaneous', [
                'flag', 'prism', 'ocean', 'gist_earth', 'terrain', 'gist_stern',
                'gnuplot', 'gnuplot2', 'CMRmap', 'cubehelix', 'brg',
                'gist_rainbow', 'rainbow', 'jet', 'turbo', 'nipy_spectral',
                'gist_ncar'])]


    gradient = np.linspace(0, 1, 256)
    gradient = np.vstack((gradient, gradient))


    def plot_color_gradients(cmap_category, cmap_list):
        # Create figure and adjust figure height to number of colormaps
        nrows = len(cmap_list)
        figh = 0.35 + 0.15 + (nrows + (nrows-1)*0.1)*0.22
        fig, axs = plt.subplots(nrows=nrows, figsize=(6.4, figh))
        fig.subplots_adjust(top=1-.35/figh, bottom=.15/figh, left=0.2, right=0.99)

        axs[0].set_title(cmap_category + ' colormaps', fontsize=14)

        for ax, name in zip(axs, cmap_list):
            ax.imshow(gradient, aspect='auto', cmap=plt.get_cmap(name))
            ax.text(-.01, .5, name, va='center', ha='right', fontsize=10,
                    transform=ax.transAxes)

        # Turn off *all* ticks & spines, not just the ones with colormaps.
        for ax in axs:
            ax.set_axis_off()


    for cmap_category, cmap_list in cmaps:
        plot_color_gradients(cmap_category, cmap_list)

    plt.show()




.. rst-class:: sphx-glr-horizontal


    *

      .. image:: /gallery/color/images/sphx_glr_colormap_reference_001.png
          :alt: Perceptually Uniform Sequential colormaps
          :class: sphx-glr-multi-img

    *

      .. image:: /gallery/color/images/sphx_glr_colormap_reference_002.png
          :alt: Sequential colormaps
          :class: sphx-glr-multi-img

    *

      .. image:: /gallery/color/images/sphx_glr_colormap_reference_003.png
          :alt: Sequential (2) colormaps
          :class: sphx-glr-multi-img

    *

      .. image:: /gallery/color/images/sphx_glr_colormap_reference_004.png
          :alt: Diverging colormaps
          :class: sphx-glr-multi-img

    *

      .. image:: /gallery/color/images/sphx_glr_colormap_reference_005.png
          :alt: Cyclic colormaps
          :class: sphx-glr-multi-img

    *

      .. image:: /gallery/color/images/sphx_glr_colormap_reference_006.png
          :alt: Qualitative colormaps
          :class: sphx-glr-multi-img

    *

      .. image:: /gallery/color/images/sphx_glr_colormap_reference_007.png
          :alt: Miscellaneous colormaps
          :class: sphx-glr-multi-img





------------

References
""""""""""

The use of the following functions, methods, classes and modules is shown
in this example:


.. code-block:: default


    import matplotlib
    matplotlib.colors
    matplotlib.axes.Axes.imshow
    matplotlib.figure.Figure.text
    matplotlib.axes.Axes.set_axis_off




.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    <function _AxesBase.set_axis_off at 0x7f79f277d1f0>




.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  3.580 seconds)


.. _sphx_glr_download_gallery_color_colormap_reference.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: colormap_reference.py <colormap_reference.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: colormap_reference.ipynb <colormap_reference.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    Keywords: matplotlib code example, codex, python plot, pyplot
    `Gallery generated by Sphinx-Gallery
    <https://sphinx-gallery.readthedocs.io>`_
